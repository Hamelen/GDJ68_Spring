<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.iu.main.bankBook.BankBookDAO">
	<sql id="searchSql">
		WHERE BOOKNUM>0
		AND
		<choose>
			<when test="kind == 'name'">
				BOOKNAME LIKE '%' || #{search} || '%'
			</when>
			<otherwise>
				BOOKCONTENTS LIKE '%'|| #{search} || '%'
			</otherwise>
		</choose>
	</sql>


	<!-- id는 식별자 -->
	<!-- mapper내에서만 다르면됨 -->


	<insert id="setAdd" parameterType="BankBookDTO">
	    <selectKey keyProperty="bookNum" resultType="Long" order="BEFORE">
	    SELECT BANK_SEQ.NEXTVAL FROM DUAL
	    </selectKey>
		INSERT INTO BANKBOOK VALUES
		(#{bookNum},#{bookName},#{bookRate},#{bookSale},#{bookContents})
	</insert>

<!-- 	<select id="getSequence" resultType="Long">
		SELECT BANK_SEQ.NEXTVAL FROM DUAL
	</select> -->
	<!-- 이걸 쓴 후에 SETADD의 시퀀스를 #{bookNum}으로 -->

	<update id="setUpdate" parameterType="BankBookDTO">
		UPDATE BANKBOOK SET
		BOOKNAME=#{bookName},BOOKRATE=#{bookRate},BOOKSALE=#{bookSale},BOOKCONTENTS=#{bookContents}
		WHERE BOOKNUM=#{bookNum}
	</update>

	<delete id="setDelete" parameterType="Long">
		DELETE BANKBOOK WHERE BOOKNUM=#{num}
		<!-- 파라미터 게터 -->
	</delete>

	<select id="getList" resultType="BankBookDTO"
		parameterType="com.iu.main.util.Pager">
		SELECT BOOKNUM, BOOKNAME, BOOKRATE, BOOKSALE FROM
		(SELECT ROWNUM R, B.*
		FROM
		(
		SELECT * FROM BANKBOOK
		<include refid="searchSql"></include>



		<!-- <if test="kind == 'name'"> AND BOOKNAME LIKE '%' || #{search} || '%' 
			</if> <if test="kind == 'contents'"> AND BOOKCONTENTS LIKE '%'|| #{search} 
			|| '%' </if> -->
		ORDER BY BOOKNUM DESC
		) B
		)
		WHERE R BETWEEN #{startRow} AND #{lastRow}
		<!-- 테이블이나 컬럼명에는 #{}로 멤버변수 사용 x, 값만 가능 -->
	</select>

	<!-- resultType은 같은 세터의 이름을 찾아서 가져온다 -->
	<!-- 그래서 DTO를 넣음 -->
	<!-- 대신 DAO에서 처리 -->


	<!-- select태그 빼고는 resultType이 int로 정해져있음 (성공여부) -->

	<!-- long으로해도되고 dto도됨 -->
	<select id="getDetail" resultMap="getDetailResult"
		parameterType="BankBookDTO">
		SELECT B.*, BF.*
		FROM BANKBOOK B LEFT OUTER JOIN BANKFILE BF
		ON B.BOOKNUM = BF.BOOKNUM
		WHERE
		B.BOOKNUM=#{bookNum}

		<!-- DTO.bookNum 세터이름 -->
		<!-- id는 마음대로 지어도 되지만 매퍼 내부에서는 구별이 되어야 함. -->
		<!-- xml은 $대신에 #씀 -->
	</select>

	<resultMap type="BankBookDTO" id="getDetailResult">
		<id column="BOOKNUM" property="bookNum" />
		<result column="BOOKNAME" property="bookName" />
		<result column="BOOKRATE" property="bookRate" />
		<result column="BOOKSALE" property="bookSale" />
		<result column="BOOKCONTENTS" property="bookContents" />

		<collection property="fileDTOs" javaType="List"
			ofType="BankBookFileDTO">
			<id column="FILENUM" property="fileNum" />
			<result column="FILENAME" property="fileName" />
			<result column="ORIGINALNAME" property="originalName" />
		</collection>
	</resultMap>


	<select id="getTotal" resultType="Long"
		parameterType="com.iu.main.util.Pager">
		SELECT COUNT(BOOKNUM) FROM BANKBOOK
		<include refid="searchSql"></include>

	</select>

	<insert id="setFile" parameterType="BankBookFileDTO">
		INSERT INTO BANKFILE (FILENUM, BOOKNUM, FILENAME, ORIGINALNAME)
		VALUES (BANK_SEQ.NEXTVAL, #{bookNum},#{fileName},#{originalName})
	</insert>



	<!-- sql문 -->
	<!-- 값이 비어있으면 에러 -->
</mapper>
  